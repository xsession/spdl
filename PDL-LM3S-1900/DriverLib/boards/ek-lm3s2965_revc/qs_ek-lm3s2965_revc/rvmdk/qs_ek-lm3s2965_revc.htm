<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\rvmdk\qs_ek-lm3s2965_revc.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\rvmdk\qs_ek-lm3s2965_revc.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sun Mar 24 21:48:40 2024
<BR><P>
<H3>Maximum Stack Usage =        152 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; PlayGame &rArr; DrawBullets &rArr; CANUpdateTargetLED &rArr; CANMessageSet &rArr; CANReadReg
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[7]">Reset_Handler</a>
 <LI><a href="#[1]">NmiSR</a>
 <LI><a href="#[2]">FaultISR</a>
 <LI><a href="#[3]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6d]">UARTDisable</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6d]">UARTDisable</a><BR>
 <LI><a href="#[b]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">SysCtlDelay</a><BR>
 <LI><a href="#[55]">SSIDataPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[55]">SSIDataPut</a><BR>
 <LI><a href="#[56]">SSIDataGet</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[56]">SSIDataGet</a><BR>
 <LI><a href="#[3e]">UARTCharPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3e]">UARTCharPut</a><BR>
 <LI><a href="#[1]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NmiSR</a><BR>
 <LI><a href="#[2]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">FaultISR</a><BR>
 <LI><a href="#[3]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[5]">CANHandler</a> from can_net.o(.text) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[2]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[3]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 49 times from startup_rvmdk.o(RESET)
 <LI><a href="#[1]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[7]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[4]">SysTickIntHandler</a> from qs_ek-lm3s2965_revc.o(.text) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[6]">main</a> from qs_ek-lm3s2965_revc.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[7]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[8]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[6e]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[9]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[65]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6f]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[70]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[71]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[72]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[73]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[74]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[b]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>

<P><STRONG><a name="[11]"></a>AudioVolume</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AudioVolume
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMSyncUpdate
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputState
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputInvert
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlaySound
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlaySong
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolumeDown
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolumeUp
</UL>

<P><STRONG><a name="[12]"></a>AudioVolumeUp</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AudioVolumeUp &rArr; AudioVolume
</UL>
<BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolume
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[13]"></a>AudioVolumeDown</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AudioVolumeDown &rArr; AudioVolume
</UL>
<BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolume
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[75]"></a>AudioVolumeGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, audio.o(.text), UNUSED)

<P><STRONG><a name="[14]"></a>AudioHandler</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AudioHandler &rArr; AudioMute
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMSyncUpdate
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenPeriodSet
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioMute
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntHandler
</UL>

<P><STRONG><a name="[15]"></a>AudioOff</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AudioOff &rArr; AudioMute
</UL>
<BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioMute
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
</UL>

<P><STRONG><a name="[16]"></a>AudioOn</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AudioOn &rArr; AudioMute
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputState
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenEnable
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenDisable
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenConfigure
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioMute
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a]"></a>AudioPlaySong</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AudioPlaySong &rArr; AudioVolume
</UL>
<BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolume
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayGame
</UL>

<P><STRONG><a name="[1b]"></a>AudioPlaySound</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AudioPlaySound &rArr; AudioVolume
</UL>
<BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolume
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayGame
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBullets
</UL>

<P><STRONG><a name="[1c]"></a>CANMain</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, can_net.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
</UL>

<P><STRONG><a name="[1f]"></a>CANGetTargetVersion</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, can_net.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
</UL>

<P><STRONG><a name="[20]"></a>CANUpdateTargetLED</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, can_net.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CANUpdateTargetLED &rArr; CANMessageSet &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBullets
</UL>

<P><STRONG><a name="[21]"></a>CANConfigureNetwork</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, can_net.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CANConfigureNetwork &rArr; CANMessageSet &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
</UL>

<P><STRONG><a name="[5]"></a>CANHandler</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, can_net.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CANHandler &rArr; CANMessageGet &rArr; CANReadDataReg &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANStatusGet
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageClear
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntStatus
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntClear
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolumeDown
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolumeUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>CANConfigure</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, can_net.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CANConfigure &rArr; CANConfigureNetwork &rArr; CANMessageSet &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANSetBitTiming
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntEnable
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANInit
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANEnable
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigureNetwork
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>MainScreen</STRONG> (Thumb, 270 bytes, Stack size 40 bytes, game.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = MainScreen &rArr; GenerateMaze &rArr; RandomSeed
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4ImageDraw
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMaze
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenerateMaze
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>PlayGame</STRONG> (Thumb, 1184 bytes, Stack size 48 bytes, game.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = PlayGame &rArr; DrawBullets &rArr; CANUpdateTargetLED &rArr; CANMessageSet &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RandomNumber
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4ImageDraw
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawNumber
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawExplosions
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPlayer
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBullets
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMonsters
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveMonsters
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCheat
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMaze
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenerateMaze
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlaySound
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlaySong
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>SysTickIntHandler</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, qs_ek-lm3s2965_revc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SysTickIntHandler &rArr; AudioHandler &rArr; AudioMute
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RandomAddEntropy
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>main</STRONG> (Thumb, 402 bytes, Stack size 0 bytes, qs_ek-lm3s2965_revc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = main &rArr; PlayGame &rArr; DrawBullets &rArr; CANUpdateTargetLED &rArr; CANMessageSet &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEnable
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickPeriodSet
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntEnable
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickEnable
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPWMClockSet
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlLDOSet
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLogo
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayGame
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreen
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlaySong
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioOn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[40]"></a>RandomAddEntropy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, random.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntHandler
</UL>

<P><STRONG><a name="[2f]"></a>RandomSeed</STRONG> (Thumb, 332 bytes, Stack size 28 bytes, random.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RandomSeed
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenerateMaze
</UL>

<P><STRONG><a name="[30]"></a>RandomNumber</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, random.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayGame
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenerateMaze
</UL>

<P><STRONG><a name="[58]"></a>RIT128x96x4Clear</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, rit128x96x4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RIT128x96x4Clear &rArr; RITWriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
</UL>

<P><STRONG><a name="[59]"></a>RIT128x96x4StringDraw</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, rit128x96x4.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
</UL>

<P><STRONG><a name="[36]"></a>RIT128x96x4ImageDraw</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, rit128x96x4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RIT128x96x4ImageDraw &rArr; RITWriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLogo
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayGame
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreen
</UL>

<P><STRONG><a name="[5a]"></a>RIT128x96x4Enable</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, rit128x96x4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = RIT128x96x4Enable &rArr; GPIOPinTypeSSI &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIEnable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDisable
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGetNonBlocking
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIConfigSetExpClk
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
</UL>

<P><STRONG><a name="[60]"></a>RIT128x96x4Disable</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, rit128x96x4.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDisable
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGetNonBlocking
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>

<P><STRONG><a name="[4f]"></a>RIT128x96x4Init</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, rit128x96x4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = RIT128x96x4Init &rArr; RIT128x96x4Enable &rArr; GPIOPinTypeSSI &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Enable
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Clear
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>RIT128x96x4DisplayOn</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, rit128x96x4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RIT128x96x4DisplayOn &rArr; RITWriteCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
</UL>

<P><STRONG><a name="[62]"></a>RIT128x96x4DisplayOff</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rit128x96x4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RIT128x96x4DisplayOff &rArr; RITWriteCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
</UL>

<P><STRONG><a name="[53]"></a>ScreenSaver</STRONG> (Thumb, 930 bytes, Stack size 40 bytes, screen_saver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ScreenSaver &rArr; CANUpdateTargetLED &rArr; CANMessageSet &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMPulseWidthSet
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaverLine
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4DisplayOff
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4DisplayOn
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Clear
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RandomNumber
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4ImageDraw
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANUpdateTargetLED
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputState
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenPeriodSet
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenEnable
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenDisable
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenConfigure
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioOn
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioOff
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[76]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>CANEnable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, can.o(i.CANEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CANEnable &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANWriteReg
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
</UL>

<P><STRONG><a name="[6a]"></a>CANGetIntNumber</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, can.o(i.CANGetIntNumber))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANReadReg
</UL>

<P><STRONG><a name="[29]"></a>CANInit</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, can.o(i.CANInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANInit &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
</UL>

<P><STRONG><a name="[25]"></a>CANIntClear</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, can.o(i.CANIntClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANIntClear &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANWriteReg
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[2c]"></a>CANIntEnable</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, can.o(i.CANIntEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANIntEnable &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANWriteReg
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
</UL>

<P><STRONG><a name="[22]"></a>CANIntStatus</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, can.o(i.CANIntStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANIntStatus &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[24]"></a>CANMessageClear</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, can.o(i.CANMessageClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANMessageClear &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANWriteReg
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[1d]"></a>CANMessageGet</STRONG> (Thumb, 364 bytes, Stack size 48 bytes, can.o(i.CANMessageGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CANMessageGet &rArr; CANReadDataReg &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANWriteReg
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANReadReg
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANReadDataReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANGetTargetVersion
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMain
</UL>

<P><STRONG><a name="[1e]"></a>CANMessageSet</STRONG> (Thumb, 428 bytes, Stack size 48 bytes, can.o(i.CANMessageSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CANMessageSet &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANWriteReg
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANWriteDataReg
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigureNetwork
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANUpdateTargetLED
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANGetTargetVersion
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMain
</UL>

<P><STRONG><a name="[68]"></a>CANReadDataReg</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, can.o(i.CANReadDataReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CANReadDataReg &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
</UL>

<P><STRONG><a name="[66]"></a>CANReadReg</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, can.o(i.CANReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDisable
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANGetIntNumber
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANReadDataReg
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANStatusGet
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANSetBitTiming
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageClear
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntStatus
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntEnable
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntClear
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANInit
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANEnable
</UL>

<P><STRONG><a name="[2a]"></a>CANSetBitTiming</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, can.o(i.CANSetBitTiming))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANSetBitTiming &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANWriteReg
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
</UL>

<P><STRONG><a name="[23]"></a>CANStatusGet</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, can.o(i.CANStatusGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANStatusGet &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[69]"></a>CANWriteDataReg</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, can.o(i.CANWriteDataReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CANWriteDataReg
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
</UL>

<P><STRONG><a name="[67]"></a>CANWriteReg</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, can.o(i.CANWriteReg))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANWriteDataReg
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANSetBitTiming
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageClear
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntEnable
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntClear
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANEnable
</UL>

<P><STRONG><a name="[6c]"></a>GPIODirModeSet</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
</UL>

<P><STRONG><a name="[48]"></a>GPIOPadConfigSet</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Disable
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Enable
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
</UL>

<P><STRONG><a name="[3f]"></a>GPIOPinRead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntHandler
</UL>

<P><STRONG><a name="[28]"></a>GPIOPinTypeCAN</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeCAN))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIOPinTypeCAN &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
</UL>

<P><STRONG><a name="[47]"></a>GPIOPinTypeGPIOInput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIOPinTypeGPIOInput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Disable
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>GPIOPinTypePWM</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypePWM))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIOPinTypePWM &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>GPIOPinTypeSSI</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeSSI))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIOPinTypeSSI &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Enable
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
</UL>

<P><STRONG><a name="[49]"></a>GPIOPinTypeUART</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIOPinTypeUART &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Disable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>IntDisable</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, interrupt.o(i.IntDisable))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANReadReg
</UL>

<P><STRONG><a name="[2d]"></a>IntEnable</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANReadReg
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
</UL>

<P><STRONG><a name="[18]"></a>PWMGenConfigure</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, pwm.o(i.PWMGenConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioOn
</UL>

<P><STRONG><a name="[17]"></a>PWMGenDisable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pwm.o(i.PWMGenDisable))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioOn
</UL>

<P><STRONG><a name="[19]"></a>PWMGenEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pwm.o(i.PWMGenEnable))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioOn
</UL>

<P><STRONG><a name="[f]"></a>PWMGenPeriodSet</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, pwm.o(i.PWMGenPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioMute
</UL>

<P><STRONG><a name="[e]"></a>PWMOutputInvert</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pwm.o(i.PWMOutputInvert))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolume
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioMute
</UL>

<P><STRONG><a name="[d]"></a>PWMOutputState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pwm.o(i.PWMOutputState))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioOn
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolume
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioMute
</UL>

<P><STRONG><a name="[64]"></a>PWMPulseWidthSet</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, pwm.o(i.PWMPulseWidthSet))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
</UL>

<P><STRONG><a name="[10]"></a>PWMSyncUpdate</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pwm.o(i.PWMSyncUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolume
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioMute
</UL>

<P><STRONG><a name="[5c]"></a>SSIConfigSetExpClk</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ssi.o(i.SSIConfigSetExpClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SSIConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Enable
</UL>

<P><STRONG><a name="[56]"></a>SSIDataGet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ssi.o(i.SSIDataGet))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGet
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGet
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
</UL>

<P><STRONG><a name="[5f]"></a>SSIDataGetNonBlocking</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ssi.o(i.SSIDataGetNonBlocking))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Disable
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Enable
</UL>

<P><STRONG><a name="[55]"></a>SSIDataPut</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ssi.o(i.SSIDataPut))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RITWriteCommand
</UL>

<P><STRONG><a name="[5b]"></a>SSIDisable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ssi.o(i.SSIDisable))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Disable
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Enable
</UL>

<P><STRONG><a name="[5e]"></a>SSIEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ssi.o(i.SSIEnable))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Enable
</UL>

<P><STRONG><a name="[46]"></a>SysCtlClockGet</STRONG> (Thumb, 256 bytes, Stack size 12 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Enable
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>SysCtlClockSet</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, sysctl.o(i.SysCtlClockSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43]"></a>SysCtlLDOSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlLDOSet))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>SysCtlPWMClockSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPWMClockSet))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
</UL>

<P><STRONG><a name="[52]"></a>SysTickEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickEnable))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>SysTickIntEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>SysTickPeriodSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(i.SysTickPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>UARTCharPut</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.UARTCharPut))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayGame
</UL>

<P><STRONG><a name="[4d]"></a>UARTConfigSetExpClk</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, uart.o(i.UARTConfigSetExpClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTConfigSetExpClk
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEnable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>UARTDisable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, uart.o(i.UARTDisable))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTDisable
</UL>

<P><STRONG><a name="[4e]"></a>UARTEnable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart.o(i.UARTEnable))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[78]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[79]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[c]"></a>AudioMute</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AudioMute
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMSyncUpdate
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputState
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputInvert
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenPeriodSet
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioOn
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioOff
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHandler
</UL>

<P><STRONG><a name="[2e]"></a>GenerateMaze</STRONG> (Thumb, 632 bytes, Stack size 40 bytes, game.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = GenerateMaze &rArr; RandomSeed
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RandomSeed
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RandomNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayGame
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreen
</UL>

<P><STRONG><a name="[35]"></a>DrawMaze</STRONG> (Thumb, 194 bytes, Stack size 44 bytes, game.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DrawMaze
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayGame
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreen
</UL>

<P><STRONG><a name="[38]"></a>DrawCheat</STRONG> (Thumb, 206 bytes, Stack size 20 bytes, game.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DrawCheat
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayGame
</UL>

<P><STRONG><a name="[39]"></a>MoveMonsters</STRONG> (Thumb, 340 bytes, Stack size 36 bytes, game.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MoveMonsters
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayGame
</UL>

<P><STRONG><a name="[3a]"></a>DrawMonsters</STRONG> (Thumb, 250 bytes, Stack size 36 bytes, game.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DrawMonsters
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayGame
</UL>

<P><STRONG><a name="[33]"></a>AddExplosion</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, game.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = AddExplosion
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBullets
</UL>

<P><STRONG><a name="[32]"></a>SetBulletDir</STRONG> (Thumb, 148 bytes, Stack size 28 bytes, game.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SetBulletDir
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBullets
</UL>

<P><STRONG><a name="[31]"></a>DrawBullets</STRONG> (Thumb, 870 bytes, Stack size 40 bytes, game.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DrawBullets &rArr; CANUpdateTargetLED &rArr; CANMessageSet &rArr; CANReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBulletDir
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddExplosion
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANUpdateTargetLED
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlaySound
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayGame
</UL>

<P><STRONG><a name="[3b]"></a>DrawPlayer</STRONG> (Thumb, 258 bytes, Stack size 20 bytes, game.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DrawPlayer
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayGame
</UL>

<P><STRONG><a name="[3c]"></a>DrawExplosions</STRONG> (Thumb, 298 bytes, Stack size 36 bytes, game.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DrawExplosions
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayGame
</UL>

<P><STRONG><a name="[3d]"></a>DrawNumber</STRONG> (Thumb, 124 bytes, Stack size 36 bytes, game.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DrawNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayGame
</UL>

<P><STRONG><a name="[42]"></a>Delay</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, qs_ek-lm3s2965_revc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLogo
</UL>

<P><STRONG><a name="[41]"></a>DisplayLogo</STRONG> (Thumb, 312 bytes, Stack size 56 bytes, qs_ek-lm3s2965_revc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DisplayLogo &rArr; RIT128x96x4ImageDraw &rArr; RITWriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4ImageDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>RITWriteCommand</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, rit128x96x4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RITWriteCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGet
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4DisplayOff
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4DisplayOn
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4StringDraw
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Clear
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4ImageDraw
</UL>

<P><STRONG><a name="[57]"></a>RITWriteData</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, rit128x96x4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RITWriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGet
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4StringDraw
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4Clear
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT128x96x4ImageDraw
</UL>

<P><STRONG><a name="[63]"></a>ScreenSaverLine</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, screen_saver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ScreenSaverLine
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenSaver
</UL>

<P><STRONG><a name="[1]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
